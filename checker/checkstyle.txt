./add/hashtable.c:12: WARNING:BRACES: braces {} are not necessary for single statement blocks
./add/hashtable.c:26: WARNING:BRACES: braces {} are not necessary for single statement blocks
./add/hashtable.c:35: WARNING:BRACES: braces {} are not necessary for single statement blocks
./add/hashtable.c:42: CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "node"
./add/hashtable.c:44: WARNING:BRACES: braces {} are not necessary for single statement blocks
./add/hashtable.c:55: WARNING:BRACES: braces {} are not necessary for single statement blocks
./add/hashtable.c:62: CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "node"
./add/hashtable.c:64: WARNING:BRACES: braces {} are not necessary for single statement blocks
./add/hashtable.c:76: WARNING:BRACES: braces {} are not necessary for single statement blocks
./add/hashtable.c:85: CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "node"
./add/hashtable.c:121: WARNING:BRACES: braces {} are not necessary for single statement blocks
./add/hashtable.c:130: CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "node"
./add/hashtable.c:153: WARNING:BRACES: braces {} are not necessary for single statement blocks
./add/hashtable.c:160: CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "node"
./add/hashtable.c:176: CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ht"
./add/hashtable.c:184: CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!ht"
./add/hashtable.h:17: WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
./add/hashtable.h:18: WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
./add/hashtable.h:18: WARNING:FUNCTION_ARGUMENTS: function definition argument 'void *' should also have an identifier name
./add/specific_linked_list.c:71: WARNING:BRACES: braces {} are not necessary for any arm of this statement
./add/specific_linked_list.c:76: WARNING:BRACES: braces {} are not necessary for any arm of this statement
./add/specific_linked_list.c:135: WARNING:BRACES: braces {} are not necessary for single statement blocks
./add/tree.c:20: CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!node"
./add/tree.c:20: CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!data"
./add/tree.c:20: CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!node->kid"
./add/tree.c:25: WARNING:BRACES: braces {} are not necessary for single statement blocks
./add/tree.c:31: WARNING:BRACES: braces {} are not necessary for single statement blocks
./add/tree.c:31: CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "found"
./add/tree.c:47: CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!node"
./add/tree.c:50: CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!node->data"
./add/tree.c:56: CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!tree->root"
./add/tree.c:62: CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!parent"
./add/tree.c:73: CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!node"
./add/tree.c:78: WARNING:BRACES: braces {} are not necessary for single statement blocks
./add/tree.c:83: CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!curr"
./add/tree.c:101: CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!node"
./add/tree.c:106: WARNING:BRACES: braces {} are not necessary for single statement blocks
./add/tree.c:111: CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "!curr"
./add/tree.h:29: WARNING:MISSING_EOF_NEWLINE: adding a line without newline at end of file
./friends.c:97: ERROR:TRAILING_STATEMENTS: trailing statements should be on next line
./friends.c:127: CHECK:LONG_LINE: line length of 81 exceeds 80 columns
./friends.c:161: CHECK:LONG_LINE: line length of 81 exceeds 80 columns
./friends.c:209: WARNING:BRACES: braces {} are not necessary for single statement blocks
./friends.h:21: ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
./friends.h:21: ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
./friends.h:21: ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
./lab_implem.c:6: ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
./lab_implem.c:15: ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
./lab_implem.c:19: ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
./lab_implem.c:30: ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
./lab_implem.c:32: ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
./lab_implem.c:43: ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
./lab_implem.c:43: ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
./lab_implem.c:65: ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
./lab_implem.c:89: ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
./lab_implem.c:94: ERROR:POINTER_LOCATION: "foo** bar" should be "foo **bar"
./lab_implem.c:96: ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
./lab_implem.c:96: CHECK:CAMELCASE: Avoid CamelCase: <currNode>
./lab_implem.c:98: WARNING:BRACES: braces {} are not necessary for single statement blocks
./lab_implem.c:114: ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
./lab_implem.c:116: ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
./lab_implem.c:119: ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
./lab_implem.c:123: ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
./lab_implem.c:125: ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
./lab_implem.c:128: ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
./lab_implem.c:135: ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
./lab_implem.c:148: ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
./lab_implem.c:154: ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
./lab_implem.c:159: ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
./lab_implem.c:159: ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
./lab_implem.c:167: ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
./lab_implem.c:179: ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
./lab_implem.c:179: ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
./lab_implem.c:181: ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
./lab_implem.c:196: ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
./lab_implem.c:210: ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
./lab_implem.c:230: ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
./lab_implem.c:244: ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
./lab_implem.c:246: CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
./lab_implem.c:247: CHECK:LONG_LINE: line length of 117 exceeds 80 columns
./lab_implem.c:253: ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
./lab_implem.c:253: ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
./lab_implem.c:253: ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
./lab_implem.c:255: ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
./lab_implem.c:259: ERROR:POINTER_LOCATION: "(foo*)" should be "(foo *)"
./lab_implem.c:270: ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
./lab_implem.c:274: CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
./lab_implem.c:275: CHECK:LONG_LINE: line length of 117 exceeds 80 columns
./lab_implem.c:278: CHECK:COMPARISON_TO_NULL: Comparison to NULL could be written "find_node"
./lab_implem.c:282: ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
./lab_implem.c:284: CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
./lab_implem.c:291: ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
./lab_implem.c:295: CHECK:OPEN_ENDED_LINE: Lines should not end with a '('
./lab_implem.c:296: CHECK:LONG_LINE: line length of 117 exceeds 80 columns
./lab_implem.c:307: ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
./lab_implem.h:9: CHECK:MACRO_ARG_REUSE: Macro argument reuse 'x' - possible side-effects?
./lab_implem.h:9: CHECK:MACRO_ARG_REUSE: Macro argument reuse 'y' - possible side-effects?
./lab_implem.h:11: ERROR:COMPLEX_MACRO: Macros with complex values should be enclosed in parentheses
./lab_implem.h:32: ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
./lab_implem.h:33: ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
./lab_implem.h:37: ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
./lab_implem.h:48: ERROR:POINTER_LOCATION: "foo** bar" should be "foo **bar"
./lab_implem.h:52: ERROR:POINTER_LOCATION: "foo** bar" should be "foo **bar"
./lab_implem.h:56: ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
./lab_implem.h:57: ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
./lab_implem.h:57: ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
./lab_implem.h:58: ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
./lab_implem.h:58: ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
./lab_implem.h:59: ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
./lab_implem.h:59: ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
./lab_implem.h:60: ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
./lab_implem.h:61: ERROR:POINTER_LOCATION: "foo** bar" should be "foo **bar"
./lab_implem.h:62: ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
./lab_implem.h:63: ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
./lab_implem.h:65: ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
./lab_implem.h:66: ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
./lab_implem.h:67: ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
./lab_implem.h:68: ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
./lab_implem.h:68: ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
./lab_implem.h:69: ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
./lab_implem.h:70: ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
./lab_implem.h:70: ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
./lab_implem.h:71: ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
./lab_implem.h:72: ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
./lab_implem.h:74: ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
./lab_implem.h:75: ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
./lab_implem.h:76: ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
./lab_implem.h:76: ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
./lab_implem.h:76: ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
./lab_implem.h:77: ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
./lab_implem.h:78: ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
./lab_implem.h:78: ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
./lab_implem.h:79: ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
./lab_implem.h:80: ERROR:POINTER_LOCATION: "foo* bar" should be "foo *bar"
./users.c:37: ERROR:SPACING: space required before the open parenthesis '('
./utils.h:14: WARNING:LEADING_SPACE: please, no spaces at the start of a line
./utils.h:15: ERROR:CODE_INDENT: code indent should use tabs where possible
./utils.h:15: WARNING:LEADING_SPACE: please, no spaces at the start of a line
./utils.h:16: ERROR:CODE_INDENT: code indent should use tabs where possible
./utils.h:16: WARNING:LEADING_SPACE: please, no spaces at the start of a line
./utils.h:17: ERROR:CODE_INDENT: code indent should use tabs where possible
./utils.h:17: WARNING:LEADING_SPACE: please, no spaces at the start of a line
./utils.h:18: ERROR:CODE_INDENT: code indent should use tabs where possible
./utils.h:18: WARNING:LEADING_SPACE: please, no spaces at the start of a line
./utils.h:19: ERROR:CODE_INDENT: code indent should use tabs where possible
./utils.h:19: WARNING:LEADING_SPACE: please, no spaces at the start of a line
./utils.h:20: WARNING:LEADING_SPACE: please, no spaces at the start of a line
